version: '3'

output: prefixed

vars:
  BUILD_DIR: /build

dotenv:
  - '{{.BUILD_DIR}}/.env'
  - '.env'

tasks:
  install-pkgs:
    desc: Install specified packages (DEB)
    env:
      DEBIAN_FRONTEND: noninteractive
      DEBIAN_PRIORITY: critical
      DEBCONF_NONINTERACTIVE_SEEN: 'true'
      DEBCONF_NOWARNINGS: 'yes'
    cmds:
    - cmd: apt-get -qq update -y
      silent: true
    - apt-get -qq -o Dpkg::Use-Pty=0 -o APT::Acquire::Retries=10 install -y --no-install-recommends {{.CLI_ARGS}}

  upgrade-and-install-pkgs:
    desc: Install specified packages (DEB)
    env:
      DEBIAN_FRONTEND: noninteractive
      DEBIAN_PRIORITY: critical
      DEBCONF_NONINTERACTIVE_SEEN: 'true'
      DEBCONF_NOWARNINGS: 'yes'
    cmds:
    - cmd: apt-get -qq update -y
      silent: true
    - apt-get -qq -o Dpkg::Use-Pty=0 -o APT::Acquire::Retries=10 upgrade -y --no-install-recommends --with-new-pkgs
    - apt-get -qq -o Dpkg::Use-Pty=0 -o APT::Acquire::Retries=10 install -y --no-install-recommends {{.CLI_ARGS}}

  install-pkgs-arch:
    desc: Adds architecture and install specified packages
    preconditions:
      - test -n "{{.CC_TARGET}}"
    env:
      DEBIAN_FRONTEND: noninteractive
      DEBIAN_PRIORITY: critical
      DEBCONF_NONINTERACTIVE_SEEN: 'true'
      DEBCONF_NOWARNINGS: 'yes'
    cmds:
    - dpkg --add-architecture {{.CC_TARGET}}
    - cmd: apt-get -qq update -y
      silent: true
    - apt-get -qq -o Dpkg::Use-Pty=0 -o APT::Acquire::Retries=10 install -y --no-install-recommends {{.CLI_ARGS}}    

  create-dotenv:
    desc: Create .env file
    aliases: [deb-create-dotenv]
    status:
      - test -f {{.BUILD_DIR}}/.env
    env:
        DEB_BUILD_OPTIONS: reproducible=-fixfilepath,-fixdebugpath
    cmds:
    - cmd: |
        eval "$(env dpkg-buildflags --export=sh)"
        {
          echo "CFLAGS='${CFLAGS} ${CPPFLAGS}'"
          echo "CXXFLAGS='${CXXFLAGS} ${CPPFLAGS}'"
          echo "LDFLAGS='${LDFLAGS}'"
        } > {{.BUILD_DIR}}/.env
      silent: true
