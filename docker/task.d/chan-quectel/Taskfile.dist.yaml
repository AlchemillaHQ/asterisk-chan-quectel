version: '3'

output: prefixed

vars:
  BUILD_DIR: /build

dotenv:
  - '{{.BUILD_DIR}}/.env'
  - '.env'

tasks:
  clone:
    desc: Fetch chan-quectel sources
    preconditions:
      - test -n "{{.PRESET}}"
    dir: '{{.BUILD_DIR}}'
    cmds:
      - git clone -q --branch={{.BRANCH}} http://github.com/RoEdAl/asterisk-chan-quectel.git chan-quectel

  configure:
    desc: Create CMake presets
    dotenv: ['{{.BUILD_DIR}}/buildflags.env']
    preconditions:
      - test -n "{{.PRESET}}"
    dir: '{{.BUILD_DIR}}/chan-quectel'
    cmds:
      - cmd: |
          {
            ./get-source-date-epoch.sh
            {{if .RPI_VERSION}}echo 'TOOLSET_TARGET_RPI={{.RPI_VERSION}}'{{end}}
          } >> {{.BUILD_DIR}}/.env
        silent: true
      - ./get-build-flags.sh {{.PRESET}}-env > CMakeUserPresets.json        

  build:
    desc: Build chan_quectel packages
    preconditions:
      - test -n "{{.PRESET}}"
    dir: '{{.BUILD_DIR}}/chan-quectel'
    vars:
      NINJA_BUILDER:
        sh: command -v ninja || true
    cmds:
      - >-
        cmake --preset={{.PRESET}} --log-level={{if .CMAKE_VERBOSE}}VERBOSE{{else}}STATUS{{end}}
        {{if .NINJA_BUILDER}}-G Ninja{{end}}
        {{if .CC_TOOLCHAIN}}--toolchain=cmake/toolchain/{{.CC_TOOLCHAIN}}.toolchain.cmake{{end}}
        {{if .ASTERISK_VERSION_NUM}}-DASTERISK_VERSION_NUM={{.ASTERISK_VERSION_NUM}}{{end}}
      - cmake --build --preset=package-{{.PRESET}} {{if .CMAKE_VERBOSE}}-v{{end}}

  test:
    desc: Test chan_quectel library
    preconditions:
      - test -n "{{.PRESET}}"
    dir: '{{.BUILD_DIR}}/chan-quectel'
    cmds:
      - ctest --preset={{.PRESET}} {{if .CMAKE_VERBOSE}}-V{{end}}
