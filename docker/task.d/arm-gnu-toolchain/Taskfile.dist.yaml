version: '3'

output: prefixed

vars:
  BUILD_DIR: /build

dotenv:
  - '{{.BUILD_DIR}}/.env'
  - '.env'

tasks:
  create-directory:
    desc: Create directory for ARM GNU Toolchains
    status:
      - test -d {{.BUILD_DIR}}/arm-gnu-toolchain
    cmds:
      - mkdir -p {{.BUILD_DIR}}/arm-gnu-toolchain
      - cmd: chown -R nobody:nogroup {{.BUILD_DIR}}
        ignore_error: true
  
  extract-*:
    internal: true
    vars:
      TOOLCHAIN: '{{index .MATCH 0}}'
    dir: '{{.BUILD_DIR}}/arm-gnu-toolchain/{{.TOOLCHAIN}}'
    cmds:
      - tar -xf {{.BUILD_DIR}}/download/arm-gnu-toolchain-{{.ARM_GNU_TOOLCHAIN_VER}}-x86_64-{{.TOOLCHAIN}}.tar.xz --strip-components=1

  prepare:
    desc: Prepare ARM GNU Toolchain package
    preconditions:
      - test -n "{{.ARM_GNU_TOOLCHAIN_VER}}"
      - test -d "{{.BUILD_DIR}}/arm-gnu-toolchain"
    deps:
      - extract-arm-none-linux-gnueabihf
      - extract-aarch64-none-linux-gnu

  ext-cross-compiliing-*:
    desc: Prepare ARM GNU Cross-Compiler
    vars:
      EXT_TOOLCHAIN: '{{index .MATCH 0}}'
      TOOLCHAIN: '{{.EXT_TOOLCHAIN | replace "none-" ""}}'
    cmds:
      - ln -sr /usr/lib/{{.TOOLCHAIN}} /usr/lib/{{.EXT_TOOLCHAIN}}

  link-crt-obj:
    internal: true
    requiremets:
      vars: [CRT_OBJ, GCC_DRIVER]
    vars:
      GCC_FILE:
        sh: '{{.GCC_DRIVER}} -print-file-name={{base .CRT_OBJ}}'
    silent: true
    cmds:
      - echo {{base .CRT_OBJ}} ‚ü∂ {{.GCC_FILE}}
      - ln -fsr {{.CRT_OBJ}} {{.GCC_FILE}}

  fix-ext-crt-startup-*:
    desc: Copy crt*.o files from SYSROOT to internal gcc directory
    vars:
      EXT_TOOLCHAIN: '{{index .MATCH 0}}'
      TOOLCHAIN: '{{.EXT_TOOLCHAIN | replace "none-" ""}}'
      GCC_DRIVER: '{{.BUILD_DIR}}/arm-gnu-toolchain/{{.EXT_TOOLCHAIN}}/bin/{{.EXT_TOOLCHAIN}}-gcc'      
      CRT_OBJS1:
        sh: find /usr/lib/gcc-cross/{{.TOOLCHAIN}} -type f -name '*crt*.o'
      CRT_OBJS2:
        sh: find /usr/{{.TOOLCHAIN}}/lib -type f -name '*crt*.o'        
    cmds:
      - for: {var: CRT_OBJS1}
        task: link-crt-obj
        vars:
          GCC_DRIVER: '{{.GCC_DRIVER}}'
          CRT_OBJ: '{{.ITEM}}'
      - for: {var: CRT_OBJS2}
        task: link-crt-obj
        vars:
          GCC_DRIVER: '{{.GCC_DRIVER}}'
          CRT_OBJ: '{{.ITEM}}'          
