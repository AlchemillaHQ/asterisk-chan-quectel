#!/usr/bin/cmake -P

FILE(REAL_PATH "~" HOME_DIR EXPAND_TILDE)
CMAKE_PATH(APPEND HOME_DIR .vscode extensions OUTPUT_VARIABLE VSCODE_EXTENSIONS_DIR)
IF(EXISTS ${VSCODE_EXTENSIONS_DIR})
    FILE(GLOB CPPTOOLS_DIR "${VSCODE_EXTENSIONS_DIR}/ms-vscode.cpptools*")
    FOREACH(P ${CPPTOOLS_DIR})
        CMAKE_PATH(APPEND P LLVM bin OUTPUT_VARIABLE VSE_BIN_DIR)
        IF(NOT EXISTS ${VSE_BIN_DIR})
            CONTINUE()
        ENDIF()

        FIND_PROGRAM(CLANG_FORMAT NAME clang-format HINTS ${VSE_BIN_DIR} NO_CACHE NO_DEFAULT_PATH)
        IF(NOT ${CLANG_FORMAT} STREQUAL "CLANG_FORMAT-NOTFOUND")
            BREAK()
        ENDIF()
    ENDFOREACH()
ENDIF()

IF(NOT DEFINED CLANG_FORMAT OR ${CLANG_FORMAT} STREQUAL "CLANG_FORMAT-NOTFOUND")
    FIND_PROGRAM(CLANG_FORMAT NAME clang-format NO_CACHE)
ENDIF()

IF(${CLANG_FORMAT} STREQUAL "CLANG_FORMAT-NOTFOUND")
    MESSAGE(FATAL_ERROR "Cannot find clang-format utility")
ENDIF()

CMAKE_PATH(GET CMAKE_SCRIPT_MODE_FILE PARENT_PATH SCRIPT_DIR)
CMAKE_PATH(APPEND SCRIPT_DIR src OUTPUT_VARIABLE SCRIPT_SRC_DIR)

MESSAGE(DEBUG "VSCode extensions directory: ${VSCODE_EXTENSIONS_DIR}")
MESSAGE(DEBUG "Source directory: ${SCRIPT_SRC_DIR}")
MESSAGE(VERBOSE "clang-format path: ${CLANG_FORMAT}")

INCLUDE(${SCRIPT_SRC_DIR}/source-files.cmake)

EXECUTE_PROCESS(
    COMMAND ${CLANG_FORMAT} -i --style=file ${SOURCES} ${HEADERS}
    WORKING_DIRECTORY ${SCRIPT_SRC_DIR}
    COMMAND_ERROR_IS_FATAL ANY
    COMMAND_ECHO NONE
)
