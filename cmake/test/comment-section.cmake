#
# comment-section
# Check comment section of module (dynamic library)
#
CMAKE_MINIMUM_REQUIRED(VERSION 3.20)

IF(NOT DEFINED CMAKE_ARGV3)
    MESSAGE(FATAL_ERROR "readelf not specified")
ENDIF()

IF(NOT DEFINED CMAKE_ARGV4)
    MESSAGE(FATAL_ERROR "Library not specified")
ENDIF()

IF(NOT DEFINED CMAKE_ARGV5)
    MESSAGE(FATAL_ERROR "Compiler version not specified")
ENDIF()

EXECUTE_PROCESS(
    COMMAND ${CMAKE_ARGV3} -p ".comment" -W ${CMAKE_ARGV4}
    OUTPUT_VARIABLE COMMENTS_NL
    OUTPUT_STRIP_TRAILING_WHITESPACE    
    COMMAND_ERROR_IS_FATAL ANY
    TIMEOUT 15
)

STRING(REPLACE "." "\\." ${CMAKE_ARGV5} GCC_VERSION_MATCHER)
SET(TEST_PASSED)
SET(COMMENT_LINES)
STRING(REGEX MATCHALL "[^\n\r]+" COMMENTS ${COMMENTS_NL})
FOREACH(l IN LISTS COMMENTS)
    IF(NOT "${l}" MATCHES "\\[.+\\]")
        CONTINUE()
    ENDIF()
    STRING(STRIP "${l}" COMMENT_LINE)
    IF("${COMMENT_LINE}" MATCHES "GCC\\:" AND "${COMMENT_LINE}" MATCHES "${GCC_VERSION_MATCHER}")
        SET(TEST_PASSED ON)
        LIST(APPEND COMMENT_LINES "${COMMENT_LINE}")
        MESSAGE(STATUS "Comment: ${COMMENT_LINE} âœ“")
    ELSE()
        MESSAGE(VERBOSE "Comment: ${COMMENT_LINE}")
    ENDIF()
ENDFOREACH()

LIST(LENGTH COMMENT_LINES COMMENT_LINES_CNT)
MESSAGE(STATUS "Status: ${COMMENT_LINES_CNT} comment(s) found")

IF(NOT TEST_PASSED)
    MESSAGE(FATAL_ERROR "Check failed")
ENDIF()

IF (${COMMENT_LINES_CNT} EQUAL 0)
    MESSAGE(FATAL_ERROR "Zero comments checked")
ENDIF()
