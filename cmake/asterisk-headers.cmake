#
# asterisk-headers.cmake
#

FUNCTION(ScanAsteriskHeadersDirectory VAR_PREFIX AST_DIR)
    IF(NOT AST_DIR)
        SET("${VAR_PREFIX}_RESULT" "EMPTY" PARENT SCOPE)
        RETURN()
    ENDIF()

    IF(NOT IS_DIRECTORY ${AST_DIR})
        SET("${VAR_PREFIX}_ERROR_MSG" "not a directory" PARENT_SCOPE)
        SET("${VAR_PREFIX}_RESULT" PARENT_SCOPE)
        RETURN()
    ENDIF()

    FILE(GLOB AST_LIST LIST_DIRECTORIES false RELATIVE ${AST_DIR} "${AST_DIR}/asterisk.h")
    FILE(GLOB AST_LIST2 LIST_DIRECTORIES true RELATIVE ${AST_DIR} "${AST_DIR}/asterisk")
    LIST(APPEND AST_LIST ${AST_LIST2})
    LIST(LENGTH AST_LIST AST_LIST_LEN)
    IF(${AST_LIST_LEN} EQUAL 2)
        SET("${VAR_PREFIX}_RESULT" "DIRECTORY" PARENT_SCOPE)
        CMAKE_PATH(NORMAL_PATH AST_DIR OUTPUT_VARIABLE FN_RES)
        SET("${VAR_PREFIX}_DIRECTORY" "${FN_RES}" PARENT_SCOPE)
        RETURN()
    ELSEIF(${AST_LIST_LEN} EQUAL 1)
        SET("${VAR_PREFIX}_ERROR_MSG" "incomplete headers" PARENT_SCOPE)
        SET("${VAR_PREFIX}_RESULT" PARENT_SCOPE)
        RETURN()
    ENDIF()

    FILE(GLOB AST_LIST LIST_DIRECTORIES false RELATIVE ${AST_DIR} "${AST_DIR}/asterisk-headers.tar")
    FILE(GLOB AST_LIST2 LIST_DIRECTORIES false RELATIVE ${AST_DIR} "${AST_DIR}/asterisk-headers.tar.*")
    LIST(APPEND AST_LIST ${AST_LIST2})
    LIST(LENGTH AST_LIST AST_LIST_LEN)
    IF(${AST_LIST_LEN} GREATER 1)
        SET("${VAR_PREFIX}_ERROR_MSG" "too many archives - ${AST_LIST_LEN} found" PARENT_SCOPE)
        SET("${VAR_PREFIX}_RESULT" PARENT SCOPE)
        RETURN()
    ELSEIF(${AST_LIST_LEN} EQUAL 1)
        LIST(GET AST_LIST 0 ARCHIVE_FILE)
        CMAKE_PATH(APPEND AST_DIR ${ARCHIVE_FILE} OUTPUT_VARIABLE FN_RES)
        FILE(SIZE ${FN_RES} ARCHIVE_SIZE)
        IF(${ARCHIVE_SIZE} LESS_EQUAL 1073741824)
            SET("${VAR_PREFIX}_RESULT" "ARCHIVE" PARENT_SCOPE)
            SET("${VAR_PREFIX}_ARCHIVE" "${FN_RES}" PARENT_SCOPE)
        ELSE()
            SET("${VAR_PREFIX}_ERROR_MSG" "too big archive file - ${ARCHIVE_FILE}" PARENT_SCOPE)
            SET("${VAR_PREFIX}_RESULT" PARENT SCOPE)
        ENDIF()
        RETURN()
    ENDIF()

    SET("${VAR_PREFIX}_RESULT" "NONE" PARENT_SCOPE)
ENDFUNCTION()

FUNCTION(ShowAstBuildOptSum AST_HEADERS_SUBDIR)
    CMAKE_PATH(APPEND AST_HEADERS_SUBDIR "..")
    CMAKE_PATH(NORMAL_PATH AST_HEADERS_SUBDIR)
    MESSAGE(STATUS "Asterisk header directory: ${AST_HEADERS_SUBDIR}")
    MESSAGE(CHECK_START "Getting AST_BUILDOPT_SUM")
    TRY_RUN(AST_BUILDOPT_SUM_RUN AST_BUILDOPT_SUM_COMPILE ${CMAKE_BINARY_DIR}/AST_BUILDOPT_SUM
        SOURCES ${CMAKE_SOURCE_DIR}/test/asterisk/AST_BUILDOPT_SUM.c
        COMPILE_DEFINITIONS "-I${AST_HEADERS_SUBDIR}"
        RUN_OUTPUT_VARIABLE AST_BUILDOPT_SUM_RAW
    )
    IF(AST_BUILDOPT_SUM_COMPILE AND AST_BUILDOPT_SUM_RUN)
        STRING(STRIP ${AST_BUILDOPT_SUM_RAW} AST_BUILDOPT_SUM)
        IF("${AST_BUILDOPT_SUM}" MATCHES "^[0123456789abcdef]+$")
            SET(AST_BUILDOPT_SUM ${AST_BUILDOPT_SUM} PARENT_SCOPE)
            MESSAGE(CHECK_PASS "${AST_BUILDOPT_SUM}")
        ELSE()
            MESSAGE(CHECK_FAIL "invalid [${AST_BUILDOPT_SUM}]")
            MESSAGE(SEND_ERROR "Invalid value of AST_BUILDOPT_SUM")
        ENDIF()
    ELSE()
        MESSAGE(CHECK_FAIL unknown)
        MESSAGE(SEND_ERROR "Unknown value of AST_BUILDOPT_SUM")
    ENDIF()
ENDFUNCTION()
